# ----------------------------------------------------------------------
#  makefile template for libraries
#
#  Revision history:
#
#       Revised by Christian Power April 2016
#       Revised by Christian Power March 2016
#	Revised by Christian Power Januar 2016
#	Originally written by Christian Power
#		(power22c@gmail.com) Decembre 2016
#
#  Assumption:
#   - PROJECT_DIR is created and contains
#     include src src/doc test
#   - BUILD_DIR is created and contains
#     bin lib obj doc/developer doc/user
#  
#  How to use:
#  - Set PROJECT_DIR in this makefile.  Enter an absolute path.
#  - Type 'make help' 
#  - DEBUG may be specified in the command line.  Use the values 1-9. 
#  - BUILD_DIR may be specified in the command line or set in this file.
#    The default value for BUILD_DIR is ${PROJECT_DIR}.
#  - doxygen -g ${PROJECT_DIR}/src/doc/doxy.config
#    Change in the doxygen file:
#    * EXCLUDE_PATTERNS = */test/*
#    * INPUT = ${BUILD_DIR}/
#    * RECURSIVE = YES
#    * SOURCE_BROWSER = YES
#    * USE_HTAGS = YES
#    * OUTPUT_DIRECTORY = ${BUILD_DIR}/doc/
#    * HAVE_DOT = YES
#  - Change compiler flags if needed
#  - For libraries copy the template LIB1 
#  - For programs copy the template PROG1
#
# TODO: add 'global' resp. 'tags' and 'doxygen' resp. 'doc'
#       doc should depend on tags
#
#  Created by Christian Power on 07.04.2016
#  Copyright (c) 2016 Christian Power.  All rights reserved.
# ----------------------------------------------------------------------

HOME := $(shell echo ~)
PROJECT_DIR := .
BUILD_DIR ?= ${PROJECT_DIR}/build
BIN_DIR ?= ${BUILD_DIR}/bin
LIB_DIR ?= ${BUILD_DIR}/lib
DOC_DIR ?= ${BUILD_DIR}/doc
DEPS_DIR ?= ${BUILD_DIR}/.deps
build_dirs := ${BUILD_DIR} ${BIN_DIR} ${LIB_DIR} ${DOC_DIR} ${DEPS_DIR}
build_dirs += ${BUILD_DIR}/output

DEBUG ?= 1
CURRENT_MODE ?= Mode::throw_ #Mode::terminate_, Mode::ignore_

DUNE_DIR := ${HOME}/cpp/dune
ALU_DIR := ${HOME}/cpp/ALUGrid-1.52/build
ALBERTA_DIR := ${HOME}/cpp/alberta-3.0.1/build

CXX := clang++

CPPFLAGS ?= $(addprefix -I${PROJECT_DIR}/, include src test src/config) \
 -I${HOME}/cpp/dassert/include \
 $(addprefix -I${DUNE_DIR}/, build/include dune-common dune-geometry \
   dune-istl dune-localfunctions dune-grid dune-fem dune-alugrid) \
 $(addprefix -I, /Users/christianpower/cpp/ODE_Solver) \
 $(addprefix -D, HAVE_CONFIG_H ENABLE_GMP=1 ALUGRID_SIMPLEX \
   ALBERTA_DIM=3 ENABLE_ALBERTA ENABLE_ZLIB=1 \
   GRIDDIM=2 WORLDDIM=3 POLORDER=1) \
 $(addprefix -D, DEBUG=${DEBUG} CURRENT_MODE=${CURRENT_MODE})
ifdef NDEBUG
CPPFLAGS += -DNDEBUG
endif

CXXFLAGS ?= -std=c++1y $(addprefix -W, all extra) -g -O3 -stdlib=libc++
LDFLAGS ?= $(addprefix -L, ${DUNE_DIR}/build/lib ${ALU_DIR}/lib \
             ${ALBERTA_DIR}/lib ${HOME}/cpp/alberta-3.0.1/build/lib \
	${HOME}/cpp/dune/build/lib) \
 $(addprefix -l, dunecommon dunegeometry dunegrid \
   dunealugrid dunefem alugrid alugrid_serial dunealbertagrid_3d \
   lapack blas z m gmp gmpxx alberta_utilities)

# ----------------------------------------------------------------------
# Basic makefile rules

.SUFFIXES:
.SUFFIXES: .o .cpp .h

targets = brusselator

.PHONY:	all ${targets} doc clean help checkDirs FORCEMAKE
all: checkDirs ${targets} 
doc: $(addprefix ${PROJECT_DIR}/src/doc/, $(addsuffix .config, doxy vc capg))
	doxygen $<
help:
	@ echo Some general variables:
	@ echo CXXFLAGS CPPFLAGS LDFLAGS CXX BUILD_DIR DEBUG=1-9
	@ echo 
	@ echo Possible targets - with usage or explanation:
	@ echo all - generates "${targets}"
	@ echo help - prints this message 
	@ echo doc - create documentation
	@ echo clean - deletes everything in "BUILD_DIR/{lib,bin,obj}"
	@ echo 
	@ echo ${LIB1_MSG}
	@ echo ${PROG1_MSG}
	@ echo ${PROG2_MSG}
	@ echo ${PROG3_MSG}
	@ echo ${PROG4_MSG}
	@ echo ${TEST1_MSG}
	@ echo 
clean:
	rm -rI ${BUILD_DIR}

# ----------------------------------------------------------------------
# LIB1

LIB1 := LIBNAME
VERSION1 := 0
SUBVERSION1 :=  0
PATCHVERSION1 := 0
LIB1_SRC := $(addprefix ${PROJECT_DIR}/src/, CHANGE.cpp)

LIB1_MSG := ${LIB1} - No special flags

${LIB1}: CXXFLAGS +=
${LIB1}: CPPFLAGS +=
${LIB1}: LDFLAGS +=

# ------------------------------------------------------------
# do not change

LIB1_a_obj := $(addprefix ${BUILD_DIR}/obj/, \
	       $(patsubst %.cpp, %.o, \
	        $(notdir ${LIB1_SRC}))) 
LIB1_dylib_obj := $(addprefix ${BUILD_DIR}/obj/, \
		   $(patsubst %.cpp, %_pic.o, \
		    $(notdir ${LIB1_SRC})))
-include $(patsubst %.o, %.d, ${LIB1_dylib_obj} ${LIB1_a_obj})

LIB1_dylib := lib${LIB1}.dylib
LIB1_dylib_v := lib${LIB1}.${VERSION1}.dylib
LIB1_dylib_vv := lib${LIB1}.${VERSION1}.${SUBVERSION1}.dylib
LIB1_dylib_vvp := lib${LIB1}.${VERSION1}.${SUBVERSION1}.${PATCHVERSION1}.dylib
lib1_a := ${LIB_DIR}/lib${LIB1}_s.a

${LIB1}: ${lib1_a} ${LIB1_dylib_vvp}
${lib1_a}: ${LIB1_a_obj} 
	ar -cvr $@ $^
${LIB1_dylib_vvp}: ${LIB1_dylib_obj}
	${CXX} -o $@ $^ -dynamiclib -flat_namespace
	cd ${LIB_DIR} && \
	ln -sf $@ ${LIB1_dylib_vv} && \
	ln -sf ${LIB1_dylib_vv} ${LIB1_dylib_v} && \
	ln -sf ${LIB1_dylib_v} ${LIB1_dylib}

# ----------------------------------------------------------------------
# PROG1

PROG1 := ${PROJECT_DIR}/src/linear_heat
PROG1_SRC := $(addprefix $(dir ${PROG1}), linHeat_main.cpp io_parameter.cpp \
io_l2h1Calculator.cpp io_errorStream.cpp io_paraview.cpp io_dgf.cpp \
grid_deformation.cpp grid_GridAndTime.cpp grid_GridAndTime_impl.cpp \
secOrd_op_initData.cpp secOrd_op_initData_impl.cpp\
secOrd_op_rhs.cpp secOrd_op_linearHeat.cpp \
secOrd_op_initData_u.cpp secOrd_op_initData_w.cpp \
secOrd_op_rhs_u.cpp secOrd_op_rhs_w.cpp \
secOrd_op_brusselator.cpp secOrd_op_brusselator_impl.cpp \
)

PROG1_MSG = ${PROG1_name} - No special flags

PROG1_name := $(basename $(notdir ${PROG1}))
${PROG1_name}: CXXFLAGS +=
${PROG1_name}: CPPFLAGS += 
${PROG1_name}: LDFLAGS += # $(addprefix -L${BUILD_DIR}/, lib) -l${LIB1}

# ------------------------------------------------------------
# do not change

PROG1_obj := $(addprefix ${DEPS_DIR}/, \
               $(patsubst %.cpp, %.o, \
                 $(notdir ${PROG1_SRC})))
-include $(patsubst %.o, %.d, ${PROG1_obj})

PROG1_bin := ${BIN_DIR}/${PROG1_name}

${PROG1_name}: ${PROG1_bin}
${PROG1_bin}: ${PROG1_obj}
	${CXX} -o $@ $^ ${CXXFLAGS} ${LDFLAGS} 

# ----------------------------------------------------------------------
# PROG2

PROG2 := ${PROJECT_DIR}/src/brusselator
PROG2_SRC := $(addprefix $(dir ${PROG2}), \
 brusselator_main.cpp brusselator_algo.cpp \
 brusselator_algo_impl.cpp \
 secOrd_op_brusselator.cpp secOrd_op_brusselator_impl.cpp \
 secOrd_op_solutionDriven.cpp secOrd_op_solutionDriven_impl.cpp \
)
PROG2_SRC += $(addprefix $(dir ${PROG2}), \
 io_parameter.cpp io_parameter_impl.cpp \
 io_l2h1Calculator.cpp io_errorStream.cpp io_paraview.cpp io_dgf.cpp \
 grid_deformation.cpp grid_GridAndTime.cpp grid_GridAndTime_impl.cpp \
 grid_fef.cpp \
 secOrd_op_initData.cpp secOrd_op_initData_impl.cpp\
 secOrd_op_identity.cpp \
 secOrd_op_rhs.cpp secOrd_op_rhs_impl.cpp\
 secOrd_op_linearHeat.cpp \
 secOrd_op_initData_u.cpp secOrd_op_initData_w.cpp \
 secOrd_op_rhs_u.cpp secOrd_op_rhs_w.cpp \
)
PROG2_MSG = ${PROG2_name} - No special flags

PROG2_name := $(basename $(notdir ${PROG2}))
${PROG2_name}: CXXFLAGS +=
${PROG2_name}: CPPFLAGS += -DPFILE="\"/Users/christianpower/cpp/DISS_surface/data/tumor_parameter.txt\"" \
 -DFEF_PATH="\"/Users/christianpower/cpp/DISS_surface/output/\""
${PROG2_name}: LDFLAGS += # $(addprefix -L${BUILD_DIR}/, lib) -l${LIB1}

# ------------------------------------------------------------
# do not change

PROG2_obj := $(addprefix ${DEPS_DIR}/, \
               $(patsubst %.cpp, %.o, \
                 $(notdir ${PROG2_SRC})))
-include $(patsubst %.o, %.d, ${PROG2_obj})

PROG2_bin := ${BIN_DIR}/${PROG2_name}

${PROG2_name}: ${PROG2_bin}
${PROG2_bin}: ${PROG2_obj}
	${CXX} -o $@ $^ ${CXXFLAGS} ${LDFLAGS} 

# ----------------------------------------------------------------------
# PROG3

PROG3 := ${PROJECT_DIR}/src/tumor.cpp
PROG3_SRC := ${PROG3}
PROG3_SRC += $(addprefix $(dir ${PROG3}), tumor_code.cpp)

PROG3_MSG = ${PROG3_name} - No special flags

PROG3_name := $(basename $(notdir ${PROG3}))
${PROG3_name}: CXXFLAGS +=
${PROG3_name}: CPPFLAGS += 
${PROG3_name}: LDFLAGS += #$(addprefix -L${BUILD_DIR}/, lib) -l${LIB1}

# ------------------------------------------------------------
# do not change

PROG3_obj := $(addprefix ${DEPS_DIR}/, \
               $(patsubst %.cpp, %.o, \
                 $(notdir ${PROG3_SRC})))
-include $(patsubst %.o, %.d, ${PROG3_obj})

PROG3_bin := ${BUILD_DIR}/bin/${PROG3_name}

${PROG3_name}: ${PROG3_bin}
${PROG3_bin}: ${PROG3_obj}
	${CXX} -o $@ $^ ${CXXFLAGS} ${LDFLAGS} 

# ----------------------------------------------------------------------
# PROG4

PROG4 := ${PROJECT_DIR}/src/esfem/esfem
# PROG4_SRC := $(addprefix $(dir ${PROG4}), main.cpp parameter.cpp grid_evolution.cpp \
# fe_grid.cpp discrete_function.cpp operator_initData.cpp operator_rhs.cpp \
# operator_linearHeat.cpp)
PROG4_SRC := $(addprefix $(dir ${PROG4}), main.cpp io_parameter.cpp \
io_l2h1Calculator.cpp io_errorStream.cpp io_paraview.cpp \
io_dgf.cpp \
grid_deformation.cpp \
grid_GridAndTime.cpp grid_GridAndTime_impl.cpp \
secOrd_op_initData.cpp secOrd_op_initData_impl.cpp\
secOrd_op_rhs.cpp secOrd_op_linearHeat.cpp \
secOrd_op_initData_u.cpp secOrd_op_initData_w.cpp \
secOrd_op_rhs_u.cpp secOrd_op_rhs_w.cpp \
secOrd_op_brusselator.cpp secOrd_op_brusselator_impl.cpp \
brusselator_algo.cpp)

PROG4_MSG = ${PROG4_name} - No special flags

PROG4_name := $(basename $(notdir ${PROG4}))
${PROG4_name}: CXXFLAGS +=
${PROG4_name}: CPPFLAGS += $(addprefix -I, $(dir ${PROG4}) \
	/Users/christianpower/cpp/ODE_Solver)
${PROG4_name}: LDFLAGS += #$(addprefix -L${BUILD_DIR}/, lib) -l${LIB1}

# ------------------------------------------------------------
# do not change

PROG4_obj := $(addprefix ${BUILD_DIR}/obj/, \
               $(patsubst %.cpp, %_esfem.o, \
                 $(notdir ${PROG4_SRC})))
-include $(patsubst %.o, %.d, ${PROG4_obj})

PROG4_bin := ${BIN_DIR}/${PROG4_name}

${PROG4_name}: ${PROG4_bin}
${PROG4_bin}: ${PROG4_obj}
	${CXX} -o $@ $^ ${CXXFLAGS} ${LDFLAGS} 

# ----------------------------------------------------------------------
# TEST1

TEST1 := ${PROJECT_DIR}/test/test_ioDgf
TEST1_SRC := ${PROJECT_DIR}/test/io_dgf.cpp
TEST1_EXTERNAL_SRC := $(addprefix $(dir ${PROG2}), \
io_parameter.cpp io_l2h1Calculator.cpp io_errorStream.cpp io_paraview.cpp io_dgf.cpp \
grid_deformation.cpp grid_GridAndTime.cpp grid_GridAndTime_impl.cpp \
)

TEST1_MSG = ${TEST1_name} - No special flags

TEST1_name := $(basename $(notdir ${TEST1}))
${TEST1_name}: CXXFLAGS +=
${TEST1_name}: CPPFLAGS += 
${TEST1_name}: LDFLAGS += 

# ------------------------------------------------------------
# do not change

TEST1_obj := $(addprefix ${DEPS_DIR}/, \
               $(patsubst %.cpp, %_test.o, \
                 $(notdir ${TEST1_SRC})))
TEST1_obj += $(addprefix ${DEPS_DIR}/, \
	       $(patsubst %.cpp, %.o, \
	         $(notdir ${TEST1_EXTERNAL_SRC})))
-include $(patsubst %.o, %.d, ${TEST1_obj})

TEST1_bin := ${BIN_DIR}/${TEST1_name}

${TEST1_name}: ${TEST1_bin}
${TEST1_bin}: ${TEST1_obj} 
	${CXX} -o $@ $^ ${CXXFLAGS} ${LDFLAGS} 

# ----------------------------------------------------------------------
# TEST2

TEST2 := ${PROJECT_DIR}/test/CHANGE.cpp
TEST2_SRC := ${TEST2}
TEST2_SRC += $(addprefix $(dir ${TEST2}), CHANGE.cpp)

TEST2_MSG = ${TEST2_name} - No special flags

TEST2_name := $(basename $(notdir ${TEST2}))
${TEST2_name}: CXXFLAGS +=
${TEST2_name}: CPPFLAGS += 
${TEST2_name}: LDFLAGS += 

# ------------------------------------------------------------
# do not change

TEST2_obj := $(addprefix ${DEPS_DIR}/, \
               $(patsubst %.cpp, %_test.o, \
                 $(notdir ${TEST2_SRC})))
-include $(patsubst %.o, %.d, ${TEST2_obj})

TEST2_bin := ${BIN_DIR}/${TEST2_name}

${TEST2_name}: ${TEST2_bin}
${TEST2_bin}: ${TEST2_obj}
	${CXX} -o $@ $^ ${CXXFLAGS} ${LDFLAGS} 

#----------------------------------------------------------------------
# pattern rules

${DEPS_DIR}/%.o: ${PROJECT_DIR}/src/%.cpp
	${CXX} -o $@ $< ${CPPFLAGS} ${CXXFLAGS} -MMD -c 
${DEPS_DIR}/%_pic.o: ${PROJECT_DIR}/src/%.cpp
	${CXX} -o $@ $< ${CPPFLAGS} ${CXXFLAGS} -fPIC -MMD -c 
${DEPS_DIR}/%_test.o: ${PROJECT_DIR}/test/%.cpp
	${CXX} -o $@ $< ${CPPFLAGS} ${CXXFLAGS} -MMD -c

# ----------------------------------------------------------------------
# Documentation

${PROJECT_DIR}/src/doc/doxy.config: 
	doxygen -g $@
	echo "@INCLUDE_PATH = ${PROJECT_DIR}/src/doc" >> $@
	echo "@INCLUDE = vc.config" >> $@
	echo "@INCLUDE = capg.config" >> $@
${PROJECT_DIR}/src/doc/vc.config: FORCEMAKE
	echo PROJECT_NUMBER = `git describe --tags` > $@
${PROJECT_DIR}/src/doc/capg.config:
	echo "EXCLUDE_PATTERNS = */test/*" > $@
	echo "INPUT = ${PROJECT_DIR}/" >> $@
	echo "RECURSIVE = YES" >> $@
	echo "SOURCE_BROWSER = YES" >> $@
	echo "USE_HTAGS = YES" >> $@
	echo "OUTPUT_DIRECTORY = ${BUILD_DIR}/doc/" >> $@
	echo "HAVE_DOT = YES" >> $@
	echo "EXTRACT_PRIVATE = YES" >> $@

# ----------------------------------------------------------------------
# build directories

checkDirs: ${build_dirs}
${build_dirs}:
	mkdir -p $@

# ----------------------------------------------------------------------
# Do not rebuild makefile


makefile: ;
Makefile: ;
GNUmakefile: ;
