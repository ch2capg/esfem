# ----------------------------------------------------------------------
#  makefile template for libraries
#
#  Revision history:
#
#	Revised by Christian Power Januar 2016
#	Originally written by Christian Power
#		(power22c@gmail.com) Decembre 2016
#
#  Assumption:
#   - PROJECT_DIR is created and contains
#     include src test
#   - BUILD_DIR is created and contains
#     bin lib obj
#  
#  How to use:
#  - Set PROJECT_DIR in this makefile.  Enter an absolute path.
#  - Type 'make help' 
#  - DEBUG may be specified in the command line.  Use the values 1-9. 
#  - BUILD_DIR may be specified in the command line or set in this file.
#    The default value for BUILD_DIR is ${PROJECT_DIR}.
#  - doxygen -g ${PROJECT_DIR}/src/doc/doxy.config
#    Change in the doxygen file:
#    * EXCLUDE_PATTERNS = */test/*
#    * 
#  - Change compiler flags if needed
#  - For libraries copy the template LIB1 
#  - For programs copy the template PROG1
#
# TODO: add 'global' resp. 'tags' and 'doxygen' resp. 'doc'
#       doc should depend on tags
#
#  Created by Christian Power on 18.01.2016
#  Copyright (c) 2016Christian Power.  All rights reserved.
# ----------------------------------------------------------------------

HOME := /home/power
PROJECT_DIR := ${HOME}/cpp/DISS_surfaces
BUILD_DIR ?= ${PROJECT_DIR}

DUNE_BASEDIR := ${HOME}/cpp/dune
# ALU_BASEDIR := ${HOME}/cpp/ALUGrid-1.52/build
ALU_BASEDIR := ${HOME}/cpp/dune/dune-alugrid/lib
ALBERTA_BASEDIR := ${HOME}/cpp/alberta-3.0.1/build

CXX := clang++
CPPFLAGS ?= $(addprefix -I${PROJECT_DIR}/, include src test src/config) \
 -I${HOME}/cpp/dassert/include \
 $(addprefix -I${DUNE_BASEDIR}/, build/include dune-common dune-geometry \
   dune-istl dune-localfunctions dune-grid dune-fem dune-alugrid) \
 $(addprefix -I, /usr/include/mpi ${HOME}/cpp/ODE_Solver) \
 $(addprefix -D, HAVE_CONFIG_H MPIPP_H ENABLE_MPI=1 ALUGRID_SIMPLEX \
   GRIDDIM=2 WORLDDIM=3 ALBERTA_DIM=3 ENABLE_ALBERTA ENABLE_ZLIB=1 \
   POLORDER=1)
# $(addprefix -D, HAVE_CONFIG_H ENABLE_GMP=1 ALUGRID_SIMPLEX \
#   ALBERTA_DIM=3 ENABLE_ALBERTA ENABLE_ZLIB=1 \
#   GRIDDIM=2 WORLDDIM=3 POLORDER=1)
CXXFLAGS ?= -std=c++1y $(addprefix -W, all extra) -stdlib=libc++ -g
LDFLAGS ?= $(addprefix -L, ${DUNE_BASEDIR}/build/lib \
	     ${ALU_BASEDIR} ${ALU_BASEDIR}/.libs \
             ${ALBERTA_BASEDIR}/lib) \
 $(addprefix -l, dunecommon dunegeometry dunegrid \
   dunealugrid dunefem dunealbertagrid_3d \
   alberta_2d alberta_utilities \
   alugrid_2d alugrid_parallel alugrid_serial \
   lapack blas quadmath \
   mpi dl hwloc z m) 
   # gmp gmpxx alugrid alugrid_serial

DEBUG ?= 0
CPPFLAGS += -DDEBUG=${DEBUG}

ifdef NDEBUG
CPPFLAGS += -DNDEBUG
endif

CURRENT_MODE ?= Mode::throw_ #Mode::terminate_, Mode::ignore_
CPPFLAGS += -DCURRENT_MODE=${CURRENT_MODE}

# ----------------------------------------------------------------------
# Basic makefile rules

.SUFFIXES:
# .RECIPEPREFIX = >
makefile: ;
Makefile: ;
GNUmakefile: ;

targets = ${libraries} ${progs}
.PHONY:	all ${targets} doc clean help
all: ${targets}

doc:  ${BUILD_DIR}/doc/header_dep.png
${BUILD_DIR}/doc/header_dep.png: ${BUILD_DIR}/src/esfem/header_dep.dot
	dot -Tpng $< > $@

help:
	@ echo Some general variables:
	@ echo CXXFLAGS CPPFLAGS LDFLAGS CXX BUILD_DIR DEBUG=1-9
	@ echo 
	@ echo Possible targets - with usage or explanation:
	@ echo all - generates "${targets}"
	@ echo help - prints this message 
	@ echo doc - generates a graph
	@ echo clean - deletes everything in "BUILD_DIR/{lib,bin,obj}"
	@ echo 
	@ echo ${LIB1_MSG}
	@ echo ${PROG1_MSG}
	@ echo ${PROG2_MSG}
	@ echo ${PROG3_MSG}
	@ echo ${PROG4_MSG}
	@ echo ${TEST1_MSG}
	@ echo 
clean: 
	find ${BUILD_DIR}/lib ( -type f -or -type l ) -exec rm -f {} +
	find ${BUILD_DIR}/bin ( -type f -or -type l ) -exec rm -f {} +
	find ${BUILD_DIR}/obj ( -type f -or -type l ) -exec rm -f {} +
	find ${BUILD_DIR}/doc ( -type f -or -type l ) -exec rm -f {} +

# ----------------------------------------------------------------------
# LIB1

LIB1 := CHANGE
VERSION1 := 0
SUBVERSION1 :=  0
PATCHVERSION1 := 0
LIB1_SRC := $(addprefix ${PROJECT_DIR}/src/, CHANGE.cpp)

LIB1_MSG := ${LIB1} - No special flags

${LIB1}: CXXFLAGS +=
${LIB1}: CPPFLAGS +=
${LIB1}: LDFLAGS +=

# ------------------------------------------------------------
# do not change

libraries += ${LIB1}

LIB1_a_obj := $(addprefix ${BUILD_DIR}/obj/, \
	       $(patsubst %.cpp, %.o, \
	        $(notdir ${LIB1_SRC}))) 
LIB1_dylib_obj := $(addprefix ${BUILD_DIR}/obj/, \
		   $(patsubst %.cpp, %_pic.o, \
		    $(notdir ${LIB1_SRC})))
-include $(patsubst %.o, %.d, ${LIB1_dylib_obj} ${LIB1_a_obj})

LIB1_dylib := ${BUILD_DIR}/lib/lib${LIB1}.dylib
LIB1_dylib_v := ${BUILD_DIR}/lib/lib${LIB1}.${VERSION1}.dylib
LIB1_dylib_vv := ${BUILD_DIR}/lib/lib${LIB1}.${VERSION1}.${SUBVERSION1}.dylib
LIB1_dylib_vvp := ${BUILD_DIR}/lib/lib${LIB1}.${VERSION1}.${SUBVERSION1}.${PATCHVERSION1}.dylib
lib1_a := ${BUILD_DIR}/lib/lib${LIB1}_s.a

${LIB1}: ${lib1_a} ${LIB1_dylib_vvp}
${lib1_a}: ${LIB1_a_obj}
	ar -cvr $@ $^
${LIB1_dylib_vvp}: ${LIB1_dylib_obj}
	${CXX} -dynamiclib -flat_namespace -o $@ $^
	ln -sf $@ ${LIB1_dylib_vv}
	ln -sf ${LIB1_dylib_vv} ${LIB1_dylib_v}
	ln -sf ${LIB1_dylib_v} ${LIB1_dylib}

# ----------------------------------------------------------------------
# PROG1

PROG1 := ${PROJECT_DIR}/src/linear_heat
PROG1_SRC := $(addprefix $(dir ${PROG1}), linHeat_main.cpp io_parameter.cpp \
io_l2h1Calculator.cpp io_errorStream.cpp io_paraview.cpp io_dgf.cpp \
grid_deformation.cpp grid_GridAndTime.cpp grid_GridAndTime_impl.cpp \
secOrd_op_initData.cpp secOrd_op_initData_impl.cpp\
secOrd_op_rhs.cpp secOrd_op_linearHeat.cpp \
secOrd_op_initData_u.cpp secOrd_op_initData_w.cpp \
secOrd_op_rhs_u.cpp secOrd_op_rhs_w.cpp \
secOrd_op_brusselator.cpp secOrd_op_brusselator_impl.cpp \
)

PROG1_MSG = ${PROG1_name} - No special flags

PROG1_name := $(basename $(notdir ${PROG1}))
${PROG1_name}: CXXFLAGS +=
${PROG1_name}: CPPFLAGS += 
${PROG1_name}: LDFLAGS += # $(addprefix -L${BUILD_DIR}/, lib) -l${LIB1}

# ------------------------------------------------------------
# do not change

progs += ${PROG1_name}

PROG1_obj := $(addprefix ${BUILD_DIR}/obj/, \
               $(patsubst %.cpp, %.o, \
                 $(notdir ${PROG1_SRC})))
-include $(patsubst %.o, %.d, ${PROG1_obj})

PROG1_bin := ${BUILD_DIR}/bin/${PROG1_name}

${PROG1_name}: ${PROG1_bin}
${PROG1_bin}: ${PROG1_obj}
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${LDFLAGS} -o $@ $^

# PROG1 := ${PROJECT_DIR}/src/2014nonlinear.cpp
# PROG1_SRC := ${PROG1}
# PROG1_SRC += $(addprefix $(dir ${PROG1}), )
# 
# PROG1_MSG = ${PROG1_name} - No special flags
# 
# PROG1_name := $(basename $(notdir ${PROG1}))
# ${PROG1_name}: CXXFLAGS +=
# ${PROG1_name}: CPPFLAGS += 
# ${PROG1_name}: LDFLAGS += # $(addprefix -L${BUILD_DIR}/, lib) -l${LIB1}
# 
# # ------------------------------------------------------------
# # do not change
# 
# progs += ${PROG1_name}
# 
# PROG1_obj := $(addprefix ${BUILD_DIR}/obj/, \
#                $(patsubst %.cpp, %.o, \
#                  $(notdir ${PROG1_SRC})))
# -include $(patsubst %.o, %.d, ${PROG1_obj})
# 
# PROG1_bin := ${BUILD_DIR}/bin/${PROG1_name}
# 
# ${PROG1_name}: ${PROG1_bin}
# ${PROG1_bin}: ${PROG1_obj}
# 	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${LDFLAGS} -o $@ $^

# ----------------------------------------------------------------------
# PROG2

PROG2 := ${PROJECT_DIR}/src/brusselator
PROG2_SRC := $(addprefix $(dir ${PROG2}), \
 brusselator_main.cpp brusselator_algo.cpp \
 secOrd_op_brusselator.cpp secOrd_op_brusselator_impl.cpp \
)
PROG2_SRC += $(addprefix $(dir ${PROG2}), \
 io_parameter.cpp io_parameter_impl.cpp \
 io_l2h1Calculator.cpp io_errorStream.cpp io_paraview.cpp io_dgf.cpp \
 grid_deformation.cpp grid_GridAndTime.cpp grid_GridAndTime_impl.cpp \
 grid_fef.cpp \
 secOrd_op_initData.cpp secOrd_op_initData_impl.cpp\
 secOrd_op_rhs.cpp secOrd_op_linearHeat.cpp \
 secOrd_op_initData_u.cpp secOrd_op_initData_w.cpp \
 secOrd_op_rhs_u.cpp secOrd_op_rhs_w.cpp \
)
PROG2_MSG = ${PROG2_name} - No special flags

PROG2_name := $(basename $(notdir ${PROG2}))
${PROG2_name}: CXXFLAGS +=
${PROG2_name}: CPPFLAGS += 
${PROG2_name}: LDFLAGS += # $(addprefix -L${BUILD_DIR}/, lib) -l${LIB1}

# ------------------------------------------------------------
# do not change

progs += ${PROG2_name}

PROG2_obj := $(addprefix ${BUILD_DIR}/obj/, \
               $(patsubst %.cpp, %.o, \
                 $(notdir ${PROG2_SRC})))
-include $(patsubst %.o, %.d, ${PROG2_obj})

PROG2_bin := ${BUILD_DIR}/bin/${PROG2_name}

${PROG2_name}: ${PROG2_bin}
${PROG2_bin}: ${PROG2_obj}
	${CXX} $^ ${CXXFLAGS} ${CPPFLAGS} ${LDFLAGS} -o $@

# PROG2 := ${PROJECT_DIR}/src/tumor_reader_main.cpp
# PROG2_SRC := ${PROG2}
# PROG2_SRC += $(addprefix $(dir ${PROG2}), CHANGE.cpp)
# 
# PROG2_MSG = ${PROG2_name} - No special flags
# 
# PROG2_name := $(basename $(notdir ${PROG2}))
# ${PROG2_name}: CXXFLAGS +=
# ${PROG2_name}: CPPFLAGS += 
# ${PROG2_name}: LDFLAGS += $(addprefix -L${BUILD_DIR}/, lib) -l${LIB1}
# 
# # ------------------------------------------------------------
# # do not change
# 
# progs += ${PROG2_name}
# 
# PROG2_obj := $(addprefix ${BUILD_DIR}/obj/, \
#                $(patsubst %.cpp, %.o, \
#                  $(notdir ${PROG2_SRC})))
# -include $(patsubst %.o, %.d, ${PROG2_obj})
# 
# PROG2_bin := ${BUILD_DIR}/bin/${PROG2_name}
# 
# ${PROG2_name}: ${PROG2_bin}
# ${PROG2_bin}: ${PROG2_obj}
# 	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${LDFLAGS} -o $@ $^

# ----------------------------------------------------------------------
# PROG3

PROG3 := ${PROJECT_DIR}/src/tumor.cpp
PROG3_SRC := ${PROG3}
PROG3_SRC += $(addprefix $(dir ${PROG3}), tumor_code.cpp)

PROG3_MSG = ${PROG3_name} - No special flags

PROG3_name := $(basename $(notdir ${PROG3}))
${PROG3_name}: CXXFLAGS +=
${PROG3_name}: CPPFLAGS += 
${PROG3_name}: LDFLAGS += #$(addprefix -L${BUILD_DIR}/, lib) -l${LIB1}

# ------------------------------------------------------------
# do not change

progs += ${PROG3_name}

PROG3_obj := $(addprefix ${BUILD_DIR}/obj/, \
               $(patsubst %.cpp, %.o, \
                 $(notdir ${PROG3_SRC})))
-include $(patsubst %.o, %.d, ${PROG3_obj})

PROG3_bin := ${BUILD_DIR}/bin/${PROG3_name}

${PROG3_name}: ${PROG3_bin}
${PROG3_bin}: ${PROG3_obj}
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${LDFLAGS} -o $@ $^

# ----------------------------------------------------------------------
# PROG4

PROG4 := ${PROJECT_DIR}/src/esfem/esfem
# PROG4_SRC := $(addprefix $(dir ${PROG4}), main.cpp parameter.cpp grid_evolution.cpp \
# fe_grid.cpp discrete_function.cpp operator_initData.cpp operator_rhs.cpp \
# operator_linearHeat.cpp)
PROG4_SRC := $(addprefix $(dir ${PROG4}), main.cpp io_parameter.cpp \
io_l2h1Calculator.cpp io_errorStream.cpp io_paraview.cpp \
grid_deformation.cpp grid_GridAndTime.cpp \
secOrd_op_initData.cpp secOrd_op_rhs.cpp secOrd_op_linearHeat.cpp \
secOrd_op_initData_u.cpp secOrd_op_initData_w.cpp \
secOrd_op_rhs_u.cpp secOrd_op_rhs_w.cpp \
secOrd_op_brusselator.cpp secOrd_op_brusselator_impl.cpp \
brusselator_algo.cpp)

PROG4_MSG = ${PROG4_name} - No special flags

PROG4_name := $(basename $(notdir ${PROG4}))
${PROG4_name}: CXXFLAGS +=
${PROG4_name}: CPPFLAGS += $(addprefix -I, $(dir ${PROG4}) \
	/Users/christianpower/cpp/ODE_Solver)
${PROG4_name}: LDFLAGS += #$(addprefix -L${BUILD_DIR}/, lib) -l${LIB1}

# ------------------------------------------------------------
# do not change

progs += ${PROG4_name}

PROG4_obj := $(addprefix ${BUILD_DIR}/obj/, \
               $(patsubst %.cpp, %_esfem.o, \
                 $(notdir ${PROG4_SRC})))
-include $(patsubst %.o, %.d, ${PROG4_obj})

PROG4_bin := ${BUILD_DIR}/bin/${PROG4_name}

${PROG4_name}: ${PROG4_bin}
${PROG4_bin}: ${PROG4_obj}
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${LDFLAGS} -o $@ $^

# ----------------------------------------------------------------------
# TEST1

TEST1 := ${PROJECT_DIR}/test/test_ioDgf
TEST1_SRC := ${PROJECT_DIR}/test/io_dgf.cpp
TEST1_EXTERNAL_SRC := $(addprefix $(dir ${PROG2}), \
io_parameter.cpp io_l2h1Calculator.cpp io_errorStream.cpp io_paraview.cpp io_dgf.cpp \
grid_deformation.cpp grid_GridAndTime.cpp grid_GridAndTime_impl.cpp \
)

TEST1_MSG = ${TEST1_name} - No special flags

TEST1_name := $(basename $(notdir ${TEST1}))
${TEST1_name}: CXXFLAGS +=
${TEST1_name}: CPPFLAGS += 
${TEST1_name}: LDFLAGS += 

# ------------------------------------------------------------
# do not change

progs += ${TEST1_name}

TEST1_obj := $(addprefix ${BUILD_DIR}/obj/, \
               $(patsubst %.cpp, %_test.o, \
                 $(notdir ${TEST1_SRC})))
TEST1_obj += $(addprefix ${BUILD_DIR}/obj/, \
	       $(patsubst %.cpp, %.o, \
	         $(notdir ${TEST1_EXTERNAL_SRC})))
-include $(patsubst %.o, %.d, ${TEST1_obj})

TEST1_bin := ${BUILD_DIR}/bin/${TEST1_name}

${TEST1_name}: ${TEST1_bin}
${TEST1_bin}: ${TEST1_obj} 
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${LDFLAGS} -o $@ $^

# TEST1 := ${PROJECT_DIR}/test/CHANGE.cpp
# TEST1_SRC := ${TEST1}
# TEST1_SRC += $(addprefix $(dir ${TEST1}), CHANGE.cpp)
# 
# TEST1_MSG = ${TEST1_name} - No special flags
# 
# TEST1_name := $(basename $(notdir ${TEST1}))
# ${TEST1_name}: CXXFLAGS +=
# ${TEST1_name}: CPPFLAGS += 
# ${TEST1_name}: LDFLAGS += 
# 
# # ------------------------------------------------------------
# # do not change
# 
# progs += ${TEST1_name}
# 
# TEST1_obj := $(addprefix ${BUILD_DIR}/obj/, \
#                $(patsubst %.cpp, %.o, \
#                  $(notdir ${TEST1_SRC})))
# -include $(patsubst %.o, %.d, ${TEST1_obj})
# 
# TEST1_bin := ${BUILD_DIR}/bin/${TEST1_name}
# 
# ${TEST1_name}: ${TEST1_bin}
# ${TEST1_bin}: ${TEST1_obj} 
# 	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${LDFLAGS} -o $@ $^

# ----------------------------------------------------------------------
# TEST2

TEST2 := ${PROJECT_DIR}/test/CHANGE.cpp
TEST2_SRC := ${TEST2}
TEST2_SRC += $(addprefix $(dir ${TEST2}), CHANGE.cpp)

TEST2_MSG = ${TEST2_name} - No special flags

TEST2_name := $(basename $(notdir ${TEST2}))
${TEST2_name}: CXXFLAGS +=
${TEST2_name}: CPPFLAGS += 
${TEST2_name}: LDFLAGS += 

# ------------------------------------------------------------
# do not change

progs += ${TEST2_name}

TEST2_obj := $(addprefix ${BUILD_DIR}/obj/, \
               $(patsubst %.cpp, %_test.o, \
                 $(notdir ${TEST2_SRC})))
-include $(patsubst %.o, %.d, ${TEST2_obj})

TEST2_bin := ${BUILD_DIR}/bin/${TEST2_name}

${TEST2_name}: ${TEST2_bin}
${TEST2_bin}: ${TEST2_obj} 
	${CXX} ${CXXFLAGS} ${CPPFLAGS} ${LDFLAGS} -o $@ $^

#----------------------------------------------------------------------
# pattern rules

${BUILD_DIR}/obj/%.o:		${PROJECT_DIR}/src/%.cpp
	${CXX} $< ${CXXFLAGS} ${CPPFLAGS} ${LDFLAGS} -MMD -c -o $@ 
${BUILD_DIR}/obj/%_pic.o:	${PROJECT_DIR}/src/%.cpp
	${CXX} $< ${CXXFLAGS} ${CPPFLAGS} ${LDFLAGS} -fPIC -MMD -c -o $@ 
${BUILD_DIR}/obj/%_test.o:		${PROJECT_DIR}/test/%.cpp
	${CXX} $< ${CXXFLAGS} ${CPPFLAGS} ${LDFLAGS} -MMD -c -o $@ 
